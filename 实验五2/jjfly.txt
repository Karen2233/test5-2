3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％3 改进的蚊群算法 在基本蚁群算法中，蚂蚁通过信息素最多的路径到达目 的地。如果该路径是到达目的地的最优路径，则在该路径上 的蚂蚁数量会很大，将导致该路径上网络节点的能量急剧减 少，使整个网络的生命周期缩短，且很可能导致该路径出现 拥塞。由文献【 5】 可知，蚁群算法易陷入局部最优解，表现为 路由信息表停滞，因此，当网络拓扑结构发生变化时，人工 蚂蚁不能很快 发现新出现 的更好路径。
 为了解决上述问题，必须对蚁群算法进行改进，使网络 中的数据流量尽可能经过不同路径，从而使得节点的能量消 耗相对均衡并有效避免蚁群算法陷入局部最优解。本文从以 下 3个方面进行改进 ：
 ( 1 ) 位于节点i的第k只蚂蚁选择下一个节点 的概率 P 通过式( 5) 确定。
 ： 』 rP Z
 r f 0 ( 5 ) = { ∑ 以 d “ ?? ( 5 )
 【 0 o t he r wi s e
 其中， ( t )是信息素强度；7 7 ( t ) 是从节点i到节点 J的距离 
的倒数 ；d 是节点 i 到节点 的时延的倒数 ；E 是蚂蚁 k即 
将访问的下一个节点的剩余能量 ；a l l owe d 是蚂蚁 k还未访 
问节点的集合； 是表示信息素相对重要程度的参数，其值 越大，该蚂蚁越倾向于选择其他蚂蚁经过的路径，蚂蚁之间 的协作性越强； 表示能见度的相对重要性，反映了蚂蚁在 运动过程中，启发信息在蚂蚁选择路径中的受重视程度，其 值越大，该状态转移概率越接近贪心规则； 是表示能量相 对重要程度的参数。
 式( 5 ) 中增加了能量控制因子，在收敛于最优解的同时平 衡了节点的能量消耗，延长了整个网络的生命周期。式( 5 ) 考 虑了时延因素，时延在一定程度上能有效反映网络的拥塞程 度，因此，该算法可以有效缓解网络拥塞。
 ( 2 ) 针对无线传感 网络拓扑结构易变 的特性 ，位于节点 i
 的第 k只蚂蚁选择下一个节点 时，按式( 6 ) 进行。
 ： j I oP d 7 E r 峨 ㈤ = { ∑ ? ( 6
 【 0 。 t h e r w i s e
 其中，q是( 0
， 1 ) 中均匀分布的随机数，q 0∈( 0， 1 ) ；L 是节点 n
 的邻居节点数。通过选择qo 值，可以决定按信息素搜索路径 还是探索新路径。
 分析式( 6) 可知，若 qo 值较大，则多数蚂蚁会选择信息素 最大的边，因此，在搜索过程中可能出现多数蚂蚁搜索到相 同路径 ，容易陷入局部最优解。若 q o值较小，能扩大搜索空 间，但搜索带有一定盲 目性，不容易收敛。综合考虑上述 2个 方面 ，qo的值在迭代过程 中作动态调整 。
 I
 c， 0<c yc l e
 s
 n。
 q 。 ={ C 。
，
， z 。 <c y c l e≤H ( 7 ) 【 c，／ , ／ <cycl e≤ r t ? 
其中，r ／ 0 ，n． 分别为迭代次数； r ／ 为最大迭代次数；o ． 7<c<
 0 ． 9，0<C <0 ． 3。由式( 7 ) 可知，算法开始运行时，以较大的 
概率选择信息素较大的边，迭代 r ／ o次后，为了防止陷入局部 最优解，改变 q。 值，扩大搜索空间。最后为了使算法收敛到 全局最优解，再次改变 。 值，以较大的概率选择信息素最大 的边，直到运行结束。
 ( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁群算法没有受到时延约束 ，因此时 延的波动较大。改进算法考虑了时延因素，时延波动较缓和，
 且在多情况下，其时延低于基本蚁群算法。改进算法时廷出 现波动且有时高于基本蚁群算法，其原因是改进算法考虑了 能量因素，在一定条件下，牺牲了一点时延来平衡能量消耗。
 从整体上看，改进算法的平均时延低于基本蚁群算法。
 
图2 节点剩余能量 
( 下转第 2 4 7页)
 
● 
／ 
● ／ 
／ ● 
● 
／ 
● ／ 
一 ● 
・ 
・ 
● ● ● ● ● 
● ● ● e ● ● ● e ● e ● e ● 苗 酗 荫
 
4 性能分析与实验结果 将图 5中的 Li n g― MCSA 结构和 32 bi t CLA 结构、
 La dn e r ― Fi s c he r结构以及 Kog ge ― S t on e结构进行对比，表 1为 比较结果，其中，第 2列和第 3列为理论上的分析，以 2输 入的简单逻辑门为衡量标准，1个异或门或选择器等价于 2个简单逻辑门； 第 4列和第 3列为在 Qu a r t us l I上进行综合，
 并利用 Cy c l o ne I I器件进行适配得到 的结果 。( 3) 信息素更新规则如下：蚁群算法在进行信息素更新 时，无论搜索到的解如何，在这些路径上的信息素都会得到 一 定程度的加强。未搜索到的更优解的信息素没有得到加强，
 反而会随着时间的推移不断挥发而更难搜索到，因此，蚁群 算法更容易受早期发现较好解的影响，陷入局部最优解。为 了克服该现象，本文采用带有奖罚机制的更新方法。在搜索 过程中，若发现的路径比以往最优解更优，则进行适当奖励，
 否则进行一定惩罚。
 信息素更新公式采用式( 3 ) ，AL( f )由式( 8) 确定：
 
『 ( Q+ 一 )／， ．蚂蚁k 在本次循环中经过节点 一 1 o 否则 ( 8 )
 
其中，C 为第 k次搜索的费用；C 为发现的最好费用。
 4 仿真实验 为了验证本文算法的性能，在 Ma t l a b下建立无线传感网 络仿真环境。传感节点数为 5 O，通信半径为 3 0，随机分布 在 1 0 0×1 0 0的正方形区域内，s i n k节点坐标为( 1 0 0， 5 0) 。传 感节点是随机分布的，为了减少偶然性，每个实验都进行 1 00次，结果取平均值。
 本实验取 a=1 ． 4， =2 ，y =5
， p=O． 9 ，Q=1
 0 0 0， 初始化时每个 节点信息素为 1 0 00，每个节点能量为 1 00。采用与 LEACH 相同的能量消耗模型，由于能量消耗变化较小，因此在实验 中取 y =5。在实际应用中，y的值可以根据能量的消耗情况作 适当调整。迭代次数为40，每次放出4 0只蚂蚁。
 4． 1 能耗和时延 在一段时间内，让某个点连续发送数据包到 s i n k节点，
 并选择一个中间节点。观察节点剩余能量的变化情况，见图2。
 可以看出，改进蚁群算法的能量消耗相对均衡。在相同条件 下进行 1 0 0次实验，结果取平均值，观察数据包的时延信息，
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％
 如图 3所示 。由于基本蚁
 括 号中的数字是 以 CLA为标准 的对 比结果 ，所提 出的加 法器逻辑延迟 比传统 的 CLA减少 了 5级 。由于 FPGA 的内部 结构、布局布线和扇出能力等因素，因此仿真结果和理论分 析有一定误差，但可以看出延迟比 CLA提高了 1 2％